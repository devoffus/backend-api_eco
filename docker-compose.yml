version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
      - "1935:1935"
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=postgres
      - CASSANDRA_HOST=cassandra
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - cassandra
      - redis
    volumes:
      - ./logs:/app/logs

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ecommerce_platform
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgresql-schema.sql:/docker-entrypoint-initdb.d/init.sql

  cassandra:
    image: cassandra:4.1
    environment:
      - CASSANDRA_CLUSTER_NAME=ecommerce_cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./scripts/cassandra-schema.cql:/docker-entrypoint-initdb.d/init.cql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app

volumes:
  postgres_data:
  cassandra_data:
  redis_data:
